import numpy as np

class Solution:
    def fib(self, N: int) -> int:
        
         RECURSIVE
         if fib_ar[i] <= 1:
             return N
         else:
             return self.fib(N-1) + self.fib(N-2)
        
         DYNAMIC - USING NUMPY        
         if N <= 1:
             return N
         fib_ar = np.arange(N+1)
        
         fib_ar[0] = 0
         fib_ar[1] = 1
        
         sol = 0
         for i in range(2,N+1,1):
             fib_ar[i] = fib_ar[i-1] + fib_ar[i-2]
             sol = fib_ar[i]        
         return sol

         DYNAMIC - WITH ARRAY
         if N <= 1:
             return N
        
         fib_ar = [0,1]
        
         sol = 0
         for i in range(2,N+1,1):
             fib_ar.append(fib_ar[i-1] + fib_ar[i-2])
             sol = fib_ar[i]
         return sol
    
         DYNAMIC - NO ARRAY
         if N <= 1:
             return N
        
         n_1 = 0
         n_2 = 1

         for i in range(2,N+1,1):
             N_f = n_1 + n_2
             n_1 = n_2
             n_2 = N_f

         return N_f
